import os
import sys
import time
import psutil
import requests
import subprocess

# CONFIG
ONEDRIVE_URL = "https://oneclient.sfx.ms/Win/Installers/25.149.0803.0002/OneDriveSetup.exe"
INSTALLER_PATH = os.path.join(os.getcwd(), "OneDriveSetup.exe")
ONEDRIVE_EXE = os.path.expandvars(r"%LOCALAPPDATA%\Microsoft\OneDrive\OneDrive.exe")
LOOP_DELAY = 60  # seconds between uninstall/install/update cycles
CYCLES = 5  # Number of install/uninstall cycles

# --- Elevation Check ---
def ensure_elevated():
    """Re-run script in Task Scheduler with highest privileges if not admin."""
    try:
        # Check if running with admin rights
        import ctypes
        if ctypes.windll.shell32.IsUserAnAdmin():
            return True
    except:
        pass

    print("[!] Script not running as admin. Creating elevated scheduled task...")

    task_name = "OneDriveCycleTask"
    script_path = sys.argv[0]

    subprocess.run([
        "schtasks", "/Create",
        "/SC", "ONCE",
        "/ST", "00:00",
        "/TN", task_name,
        "/TR", f'"{sys.executable}" "{script_path}"',
        "/RL", "HIGHEST",
        "/F"
    ], check=True)

    subprocess.run(["schtasks", "/Run", "/TN", task_name], check=True)
    sys.exit()

# --- Download ---
def download_installer():
    print("[+] Downloading OneDrive installer...")
    response = requests.get(ONEDRIVE_URL, stream=True)
    response.raise_for_status()
    with open(INSTALLER_PATH, "wb") as file:
        for chunk in response.iter_content(chunk_size=8192):
            file.write(chunk)
    print("[+] Download complete.")

# --- Install ---
def run_installer():
    print("[+] Running OneDrive installer silently...")
    proc = subprocess.Popen([INSTALLER_PATH, "/silent"])
    proc.wait()
    ensure_installer_finished()
    wait_for_install()

# --- Uninstall ---
def uninstall_onedrive():
    print("[+] Attempting to uninstall OneDrive...")
    paths = [
        r"C:\Windows\System32\OneDriveSetup.exe",
        r"C:\Windows\SysWOW64\OneDriveSetup.exe",
        os.path.expandvars(r"%LOCALAPPDATA%\Microsoft\OneDrive\Update\OneDriveSetup.exe"),
        os.path.expandvars(r"%LOCALAPPDATA%\Microsoft\OneDrive\OneDriveSetup.exe")
    ]
    for path in paths:
        if os.path.exists(path):
            print(f"[+] Found OneDriveSetup.exe at: {path}")
            subprocess.run([path, "/uninstall", "/silent"], check=True)
            ensure_installer_finished()
            kill_onedrive_processes()
            return
    print("[-] OneDriveSetup.exe not found. Cannot uninstall.")

# --- Update ---
def update_onedrive():
    if os.path.exists(ONEDRIVE_EXE):
        print("[+] Updating OneDrive...")
        subprocess.run([ONEDRIVE_EXE, "/update"], check=True)
        ensure_installer_finished()
    else:
        print("[-] OneDrive.exe not found for update.")

# --- Helpers ---
def ensure_installer_finished():
    while any("OneDriveSetup.exe" in p.name() for p in psutil.process_iter(['name'])):
        time.sleep(2)

def wait_for_install(timeout=300):
    start_time = time.time()
    while time.time() - start_time < timeout:
        if os.path.exists(ONEDRIVE_EXE):
            return True
        time.sleep(5)
    return False

def kill_onedrive_processes():
    for proc in psutil.process_iter(['name']):
        if proc.info['name'] and "OneDrive.exe" in proc.info['name']:
            proc.kill()

# --- Main Loop ---
if __name__ == "__main__":
    ensure_elevated()
    download_installer()

    for i in range(CYCLES):
        print(f"\n[Cycle {i+1}/{CYCLES}] -----------------------")
        uninstall_onedrive()
        run_installer()
        update_onedrive()
        print(f"[+] Cycle {i+1} complete. Waiting {LOOP_DELAY} seconds for ThreatLocker logging...")
        time.sleep(LOOP_DELAY)

    print("[+] All cycles complete.")
